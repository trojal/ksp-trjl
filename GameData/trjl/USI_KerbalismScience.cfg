EXPERIMENT_DEFINITION:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    id = USI_EnvironmentalScanner
    title = Environmental Scanner
    baseValue = 18
    scienceCap = 18
    dataScale = 2
    requireAtmosphere = False
    situationMask = 5
    biomeMask = 5
    RESULTS
    {
        default = As the laser begins to vaporize bits of material for the spectrometer to analyze, you begin to wonder if this technology could be used to heat snacks...

        KerbinSrfLanded = The spectometer reports high levels of nutritious organics as you search for your snacks.
        MunSrfLanded = Spectroscopy reports a wide range of substances here in at least trace amounts.
        EelooSrfLanded = High readings of exotic compounds imply this planet may not be native to our solar system.
    }
}

@KERBALISM_EXPERIMENT_VALUES:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    %USI_DataCamera
    {
        usiCamera
        {
            size = 4512
            value = 12
            duration = 5400 // 1.5 hours
            ec_rate = 0.5
        }
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_DataCamera]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[zzzKerbalismDefault]
{
    @baseValue = #$@KERBALISM_EXPERIMENT_VALUES/USI_DataCamera/usiCamera/value$
    @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/USI_DataCamera/usiCamera/size$
    @dataScale /= #$baseValue$
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[USI_DataCamera]]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    MODULE
    {
        name = Experiment
        experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
        data_rate = #$@KERBALISM_EXPERIMENT_VALUES/USI_DataCamera/usiCamera/size$
        @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/USI_DataCamera/usiCamera/duration$
        ec_rate = 0.5
        allow_shrouded = False
    }

    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

@KERBALISM_EXPERIMENT_VALUES:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    %USI_CosmicDustAnalyzer
    {
        usiCosmicDust
        {
            size = 1000 // sample, 1 slot
            value = 20
            duration = 6480000 // 300 days
            ec_rate = 0.002
        }
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_CosmicDustAnalyzer]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[zzzKerbalismDefault]
{
    @baseValue = #$@KERBALISM_EXPERIMENT_VALUES/USI_CosmicDustAnalyzer/usiCosmicDust/value$
    @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/USI_CosmicDustAnalyzer/usiCosmicDust/size$
    @dataScale /= #$baseValue$
    
    KERBALISM_EXPERIMENT
    {
        SampleMass = 0.001
        BodyAllowed = Suns
        VirtualBiome = NoBiome
        VirtualBiome = Interstellar
        VirtualBiome = Storm
        Situation = Space@VirtualBiomes
    }
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[USI_CosmicDustAnalyzer]]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    MODULE
    {
        name = Experiment
        experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
        data_rate = #$@KERBALISM_EXPERIMENT_VALUES/USI_CosmicDustAnalyzer/usiCosmicDust/size$
        @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/USI_CosmicDustAnalyzer/usiCosmicDust/duration$
        ec_rate = 0.002
        allow_shrouded = False
        sample_collecting = True
    }

    MODULE
    {
        name = HardDrive
        experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
        sampleCapacity = 2
        dataCapacity = 0
    }

    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

@KERBALISM_EXPERIMENT_VALUES:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    %USI_InfraredSpectrometer
    {
        usi_IRspec
        {
            size = 6512
            value = 14
            duration = 14400 // 4 hours
            ec_rate = 0.2
        }
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_InfraredSpectrometer]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[zzzKerbalismDefault]
{
    @baseValue = #$@KERBALISM_EXPERIMENT_VALUES/USI_InfraredSpectrometer/usi_IRspec/value$
    @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/USI_InfraredSpectrometer/usi_IRspec/size$
    @dataScale /= #$baseValue$
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[USI_InfraredSpectrometer]]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    MODULE
    {
        name = Experiment
        experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
        data_rate = #$@KERBALISM_EXPERIMENT_VALUES/USI_InfraredSpectrometer/usi_IRspec/size$
        @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/USI_InfraredSpectrometer/usi_IRspec/duration$
        ec_rate = 0.2
        allow_shrouded = False
    }

    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

@KERBALISM_EXPERIMENT_VALUES:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    %USI_ImagingScience
    {
        usiImaging
        {
            size = 5192
            value = 12
            duration = 302400       // 14 days
            ec_rate = 0.2
        }
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_ImagingScience]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[zzzKerbalismDefault]
{
    @baseValue = #$@KERBALISM_EXPERIMENT_VALUES/USI_ImagingScience/usiImaging/value$
    @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/USI_ImagingScience/usiImaging/size$
    @dataScale /= #$baseValue$
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[USI_ImagingScience]]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    MODULE
    {
        name = Experiment
        experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
        data_rate = #$@KERBALISM_EXPERIMENT_VALUES/USI_ImagingScience/usiImaging/size$
        @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/USI_ImagingScience/usiImaging/duration$
        ec_rate = 0.2
        allow_shrouded = False
    }

    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

@KERBALISM_EXPERIMENT_VALUES:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    %USI_EnvironmentalDynamicsAnalyzer
    {
        usiEnvAnalysis
        {
            size = 8512
            value = 24
            duration = 129600 // 36 hours
            ec_rate = 0.25
        }
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_EnvironmentalDynamicsAnalyzer]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[zzzKerbalismDefault]
{
    @baseValue = #$@KERBALISM_EXPERIMENT_VALUES/USI_EnvironmentalDynamicsAnalyzer/usiEnvAnalysis/value$
    @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/USI_EnvironmentalDynamicsAnalyzer/usiEnvAnalysis/size$
    @dataScale /= #$baseValue$
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[USI_EnvironmentalDynamicsAnalyzer]]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    MODULE
    {
        name = Experiment
        experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
        data_rate = #$@KERBALISM_EXPERIMENT_VALUES/USI_EnvironmentalDynamicsAnalyzer/usiEnvAnalysis/size$
        @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/USI_EnvironmentalDynamicsAnalyzer/usiEnvAnalysis/duration$
        ec_rate = 0.25
        allow_shrouded = False
    }

    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

@KERBALISM_EXPERIMENT_VALUES:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    %USI_ISRU_Experiment
    {
        usiISRU
        {
            size = 1000
            value = 32
            duration = 3600 // 1 hour
            ec_rate = 0.25
        }
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_ISRU_Experiment]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[zzzKerbalismDefault]
{
    @baseValue = #$@KERBALISM_EXPERIMENT_VALUES/USI_ISRU_Experiment/usiISRU/value$
    @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/USI_ISRU_Experiment/usiISRU/size$
    @dataScale /= #$baseValue$

    KERBALISM_EXPERIMENT
    {
        SampleMass = 0.005
        Situation = SrfLanded@Biomes
        BodyAllowed = Atmospheric
    }
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[USI_ISRU_Experiment]]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    MODULE
    {
        name = Experiment
        experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
        data_rate = #$@KERBALISM_EXPERIMENT_VALUES/USI_ISRU_Experiment/usiISRU/size$
        @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/USI_ISRU_Experiment/usiISRU/duration$
        ec_rate = 0.25
        allow_shrouded = False
        sample_collecting = True
    }
    
    MODULE
    {
        name = HardDrive
        experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
        sampleCapacity = 1
        dataCapacity = 0
    }

    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

@KERBALISM_EXPERIMENT_VALUES:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    %USI_XRayLithochemistryExperiment
    {
        usiXRay
        {
            size = 5200
            value = 18
            duration = 7200 // 2 hours
            ec_rate = 0.44
        }
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_XRayLithochemistryExperiment]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[zzzKerbalismDefault]
{
    @baseValue = #$@KERBALISM_EXPERIMENT_VALUES/USI_XRayLithochemistryExperiment/usiXRay/value$
    @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/USI_XRayLithochemistryExperiment/usiXRay/size$
    @dataScale /= #$baseValue$
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[USI_XRayLithochemistryExperiment]]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    MODULE
    {
        name = Experiment
        experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
        data_rate = #$@KERBALISM_EXPERIMENT_VALUES/USI_XRayLithochemistryExperiment/usiXRay/size$
        @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/USI_XRayLithochemistryExperiment/usiXRay/duration$
        ec_rate = 0.44
        allow_shrouded = False
    }

    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

@KERBALISM_EXPERIMENT_VALUES:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    %USI_RadarImager
    {
        usiRadarImage
        {
            size = 7250
            value = 18
            duration = 453600   // 21 days
            ec_rate = 0.25
        }
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_RadarImager]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[zzzKerbalismDefault]
{
    @baseValue = #$@KERBALISM_EXPERIMENT_VALUES/USI_RadarImager/usiRadarImage/value$
    @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/USI_RadarImager/usiRadarImage/size$
    @dataScale /= #$baseValue$
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[USI_RadarImager]]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    MODULE
    {
        name = Experiment
        experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
        data_rate = #$@KERBALISM_EXPERIMENT_VALUES/USI_RadarImager/usiRadarImage/size$
        @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/USI_RadarImager/usiRadarImage/duration$
        ec_rate = 0.25
        allow_shrouded = False
    }

    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

@KERBALISM_EXPERIMENT_VALUES:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    %USI_PlasmaScienceExperiment
    {
        usiPlasma
        {
            size = 4200
            value = 14
            duration = 129600 // 36 hours
            ec_rate = 0.08
        }
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_PlasmaScienceExperiment]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[zzzKerbalismDefault]
{
    @baseValue = #$@KERBALISM_EXPERIMENT_VALUES/USI_PlasmaScienceExperiment/usiPlasma/value$
    @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/USI_PlasmaScienceExperiment/usiPlasma/size$
    @dataScale /= #$baseValue$

    KERBALISM_EXPERIMENT
    {
        VirtualBiome = NoBiome
        VirtualBiome = InnerBelt
        VirtualBiome = OuterBelt
        VirtualBiome = Magnetosphere
        VirtualBiome = Storm
        Situation = InSpaceLow@VirtualBiomes
        Situation = InSpaceHigh@VirtualBiomes
    }
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[USI_PlasmaScienceExperiment]]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    MODULE
    {
        name = Experiment
        experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
        data_rate = #$@KERBALISM_EXPERIMENT_VALUES/USI_PlasmaScienceExperiment/usiPlasma/size$
        @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/USI_PlasmaScienceExperiment/usiPlasma/duration$
        ec_rate = 0.08
        allow_shrouded = False
    }

    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

@KERBALISM_EXPERIMENT_VALUES:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    %USI_RadioPlasmaWaveScience
    {
        usiRpws
        {
            size = 1800
            value = 16
            duration = 648000 // 30 days
            ec_rate = 0.3
        }
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_RadioPlasmaWaveScience]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[zzzKerbalismDefault]
{
    @baseValue = #$@KERBALISM_EXPERIMENT_VALUES/USI_RadioPlasmaWaveScience/usiRpws/value$
    @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/USI_RadioPlasmaWaveScience/usiRpws/size$
    @dataScale /= #$baseValue$
    KERBALISM_EXPERIMENT
    {
        VirtualBiome = NoBiome
        VirtualBiome = InnerBelt
        VirtualBiome = OuterBelt
        VirtualBiome = Magnetosphere
        VirtualBiome = Storm
        Situation = InSpaceLow@VirtualBiomes
        Situation = InSpaceHigh@VirtualBiomes
    }
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[USI_RadioPlasmaWaveScience]]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    MODULE
    {
        name = Experiment
        experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
        data_rate = #$@KERBALISM_EXPERIMENT_VALUES/USI_RadioPlasmaWaveScience/usiRpws/size$
        @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/USI_RadioPlasmaWaveScience/usiRpws/duration$
        ec_rate = 0.3
        allow_shrouded = False
    }

    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

@KERBALISM_EXPERIMENT_VALUES:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    %USI_RadioScience
    {
        usiRadioSignal
        {
            size = 32584
            value = 18
            duration = 2592000  // 120 days
            ec_rate = 0.05
        }
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_RadioScience]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[zzzKerbalismDefault]
{
    @baseValue = #$@KERBALISM_EXPERIMENT_VALUES/USI_RadioScience/usiRadioSignal/value$
    @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/USI_RadioScience/usiRadioSignal/size$
    @dataScale /= #$baseValue$
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[USI_RadioScience]]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    MODULE
    {
        name = Experiment
        experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
        data_rate = #$@KERBALISM_EXPERIMENT_VALUES/USI_RadioScience/usiRadioSignal/size$
        @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/USI_RadioScience/usiRadioSignal/duration$
        ec_rate = 0.05
        allow_shrouded = False
    }

    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

@KERBALISM_EXPERIMENT_VALUES:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    %USI_EnvironmentalScanner
    {
        usiEnvScan
        {
            size = 1100
            value = 18
            duration = 151200   // 7 days
            ec_rate = 0.44
        }
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_EnvironmentalScanner]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[zzzKerbalismDefault]
{
    @baseValue = #$@KERBALISM_EXPERIMENT_VALUES/USI_EnvironmentalScanner/usiEnvScan/value$
    @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/USI_EnvironmentalScanner/usiEnvScan/size$
    @dataScale /= #$baseValue$
}

@PART[*]:HAS[@MODULE[*ModuleScience*]:HAS[#experimentID[USI_EnvironmentalScanner]]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]
{
    MODULE
    {
        name = Experiment
        experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
        data_rate = #$@KERBALISM_EXPERIMENT_VALUES/USI_EnvironmentalScanner/usiEnvScan/size$
        @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/USI_EnvironmentalScanner/usiEnvScan/duration$
        ec_rate = 0.44
        allow_shrouded = False
    }

    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_CosmicDustAnalyzer]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[UmbraSpaceIndustries/ExpPack]
{
    @biomeMask = 0
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_InfraredSpectrometer]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[UmbraSpaceIndustries/ExpPack]
{
    @biomeMask = 0
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_ImagingScience]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[UmbraSpaceIndustries/ExpPack]
{
    @biomeMask = 16 // Biomes only for in space low
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_EnvironmentalDynamicsAnalyzer]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[UmbraSpaceIndustries/ExpPack]
{
    @biomeMask = 3 // Biomes on surface only (same as stock barometer)
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_XRayLithochemistryExperiment]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[UmbraSpaceIndustries/ExpPack]
{
    @situationMask = 1
    @biomeMask = 1 // Biomes only when landed (not on water)
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_PlasmaScienceExperiment]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[UmbraSpaceIndustries/ExpPack]
{
    @biomeMask = 0 // No biomes: Only valid in space low or high
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_RadioPlasmaWaveScience]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[UmbraSpaceIndustries/ExpPack]
{
    @biomeMask = 0 // No biomes: Only valid in space low or high
}

@EXPERIMENT_DEFINITION:HAS[#id[USI_RadioScience]]:NEEDS[UmbraSpaceIndustries/ExpPack,FeatureScience]:FOR[UmbraSpaceIndustries/ExpPack]
{
    @biomeMask = 0 // No biomes: Only valid in space low or high
}
